set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}")

include(win32_export)

# Units in this layer:
include(unit_mdlv10)

create_export_header(${TARGETNAME_CONTAINERS})

set(PUBLIC_HEADERS_GENERAL
	include/${TARGETNAME_CONTAINERS}/LibExport.h
)

set(PUBLIC_HEADERS_SELECTED
	${PUBLIC_HEADERS_GENERAL}
)

set(PUBLIC_HEADERS_SELECTED "")
set(SOURCES_SELECTED "")

set(CONTAINERS_ALL "NO" CACHE BOOL "Includes all different container types in containers library. Useful for validating that these all compile (eg. in CI).")
init_unit_mdlv10(PUBLIC_HEADERS_SELECTED SOURCES_SELECTED CONTAINERS_ALL)

set(numSources 0)
list(LENGTH SOURCES_SELECTED numSources)

if(numSources EQUAL 0)
	message(FATAL_ERROR "No container units selected for compilation.")
endif()

if(BUILD_SHARED_LIBS)
	add_library(${TARGETNAME_CONTAINERS} SHARED ${PUBLIC_HEADERS_SELECTED} ${SOURCES_SELECTED})
else()
	add_library(${TARGETNAME_CONTAINERS} STATIC ${PUBLIC_HEADERS_SELECTED} ${SOURCES_SELECTED})
endif()

target_link_libraries(${TARGETNAME_CONTAINERS} PUBLIC ${TARGETNAME_PLAT})
target_link_libraries(${TARGETNAME_CONTAINERS} PUBLIC ${TARGETNAME_QMATH})
target_link_libraries(${TARGETNAME_CONTAINERS} PRIVATE ${TARGETNAME_INTERNAL_UTIL})

target_include_directories(${TARGETNAME_CONTAINERS} PUBLIC
	include
)

target_include_directories(${TARGETNAME_CONTAINERS} PRIVATE
	src
)

install(TARGETS ${TARGETNAME_CONTAINERS}
	ARCHIVE DESTINATION ${TARGETNAME_CONTAINERS}/lib
	LIBRARY DESTINATION ${TARGETNAME_CONTAINERS}/lib
	RUNTIME DESTINATION ${TARGETNAME_CONTAINERS}/bin
)

install(FILES ${PUBLIC_HEADERS_GENERAL} DESTINATION ${TARGETNAME_CONTAINERS}/include/${TARGETNAME_CONTAINERS})
install_unit_mdlv10()
